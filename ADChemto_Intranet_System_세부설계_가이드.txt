ADChemto Intranet System 세부 설계 및 개발 가이드
============================================

1. 세부 설계(예시)
------------------
■ 회원(직원) 관리
- 회원가입, 정보수정, 비밀번호 변경, 탈퇴, 부서/직급/권한 관리, 2FA, 이메일 인증
- 데이터베이스: users, departments, positions 테이블
- 주요 필드: employee_id, name_kr, name_en, email, password, department_id, position_id, phone_number 등

■ 근태/출퇴근 관리
- 출근/퇴근/외출/조퇴/연장근무, 근태 현황, 연차/휴가 신청, 근무 스케줄, 관리자 승인, 통계
- 데이터베이스: attendances, vacations, schedules 테이블

■ 전자결재/업무보고
- 결재 양식(휴가, 지출, 일반), 결재선 지정, 결재 진행/이력, 첨부파일, 결재 알림
- 데이터베이스: approvals, approval_lines, approval_files 테이블

■ 게시판/커뮤니티
- 공지사항, 자유게시판, 부서별 게시판, 자료실, Q&A, 댓글/답글, 첨부파일
- 데이터베이스: boards, posts, comments, files 테이블

■ 자산/비품, 시설/회의실, 일정/캘린더, 통계/대시보드 등은 위와 유사하게 테이블/관계 설계

2. 주요 화면 예시(텍스트)
------------------------
[로그인 화면]
----------------
+-----------------------------+
|   [회사 로고]                |
|   이메일: [___________]      |
|   비밀번호: [__________]     |
|   [로그인]   [비밀번호 찾기] |
+-----------------------------+

[대시보드]
----------------
+--------------------------------------+
| [상단 메뉴]  [알림]  [사용자 정보]   |
|--------------------------------------|
| 출근현황 | 결재대기 | 공지 | 일정   |
|--------------------------------------|
| 그래프/통계/최근 게시글/결재 등      |
+--------------------------------------+

[조직도/직원 관리]
------------------
+-------------------+------------------+
| [조직도 트리]     | [직원 목록/상세] |
+-------------------+------------------+

[전자결재]
----------------
+-----------------------------+
| 결재양식 선택 | 결재선 지정  |
| 결재내용 입력 | 첨부파일     |
| [결재 요청]   | [임시저장]   |
+-----------------------------+

3. API 명세(RESTful 예시)
------------------------
[회원]
- GET    /api/v1/users/           # 전체 회원 목록 조회
- GET    /api/v1/users/{id}       # 회원 상세 조회
- POST   /api/v1/users/           # 회원 등록
- PUT    /api/v1/users/{id}       # 회원 정보 수정
- DELETE /api/v1/users/{id}       # 회원 삭제

[로그인/인증]
- POST   /api/v1/auth/login       # 로그인
- POST   /api/v1/auth/logout      # 로그아웃
- POST   /api/v1/auth/refresh     # 토큰 갱신

[근태]
- GET    /api/v1/attendances/     # 근태 목록
- POST   /api/v1/attendances/     # 출근/퇴근 등록

[전자결재]
- GET    /api/v1/approvals/       # 결재 목록
- POST   /api/v1/approvals/       # 결재 요청

(기타 게시판, 자산, 시설, 일정 등도 유사하게 설계)

4. 개발 가이드
--------------
■ 폴더 구조(예시)
ADChemto_Intranet_System/
├── frontend/         # Next.js (pages, components, hooks, styles 등)
├── backend/          # FastAPI (app, models, api, core, db, tests 등)
├── db/               # 마이그레이션, 초기 데이터
├── docs/             # 문서, API 명세
└── README.md

■ 협업/운영
- Git 브랜치 전략(예: main/dev/feature), PR 리뷰, 코드 컨벤션
- 이슈/작업 관리: GitHub Issues, Notion, Jira 등
- 커밋 메시지 규칙, 코드 리뷰, 문서화

■ 배포/운영
- Docker, docker-compose로 개발/운영 환경 통일
- .env 환경변수 분리, 비밀정보 관리
- CI/CD(GitHub Actions 등)로 자동 배포
- 모니터링, 백업, 장애 대응 체계

■ 기타
- 테스트 코드 작성 습관화(Pytest, React Testing Library 등)
- Swagger/OpenAPI 문서 자동화(FastAPI)
- 보안: HTTPS, JWT, 접근 로그, 권한 체크

*각 항목별 상세 설계, 화면 시안, API 스펙, 코드 예시가 필요하면 언제든 요청해 주세요!* 