ADChemto Intranet System 상세 기능 제안서
========================================

1. 시스템 개요 및 목표
---------------------
- 사내 업무 효율화, 정보 공유, 자산/시설 관리, 전자결재, 통계 등 통합 인트라넷 시스템 구축
- 사용자 편의성, 확장성, 보안, 모바일 대응, 관리자 기능 강화

2. 전체 기능 구조
----------------

■ 로그인/인증
- 사내 계정/외부 계정(SSO) 로그인, 2FA, 비밀번호 찾기/변경, 권한별 접근 제어

■ 조직도/직원 관리
- 부서/팀/직급/직원 정보 관리, 조직도 트리, 직원 검색/상세, 인사이동/발령 이력, 명함/연락처 출력

■ 근태/출퇴근 관리
- 출근/퇴근/외출/조퇴/연장근무, 근태 현황, 연차/휴가 신청, 근무 스케줄, 관리자 승인, 통계

■ 전자결재/업무보고
- 결재 양식(휴가, 지출, 일반), 결재선 지정, 결재 진행/이력, 첨부파일, 결재 알림, 업무보고/결재 통계

■ 게시판/커뮤니티
- 공지사항, 자유게시판, 부서별 게시판, 자료실, Q&A, 댓글/답글, 첨부파일, 게시글/댓글 신고, 공지 상단 고정

■ 일정/캘린더
- 사내 일정, 부서/개인 일정, 반복/공유 일정, 일정 알림, 캘린더 뷰, 일정 통계

■ 자산/비품 관리
- 자산/비품 등록, 대여/반납, 재고/상태 관리, 이력, 자산 통계, QR코드/바코드 관리

■ 시설/회의실 예약
- 회의실/시설 예약, 예약 현황, 승인/취소, 반복 예약, 예약 통계, 시설별 권한

■ 통계/대시보드
- 근태, 결재, 게시글, 자산, 시설, 일정 등 주요 지표 시각화, 관리자 대시보드

■ 관리자/시스템 관리
- 전체 회원/조직/권한/게시판/자산/시설/통계 관리, 시스템 로그, 데이터 백업/복구, 환경설정, 접근 이력, 관리자 알림

■ 추가/확장 기능
- 외부 시스템 연동(ERP, 그룹웨어, 메신저 등), 모바일 앱(PWA/React Native), SSO(구글/MS/카카오), API 제공, 다국어 지원, 사용자 맞춤화

3. 회원정보 등록(입력) 항목 예시
-------------------------------
| 항목             | 컬럼명             | 타입            | 필수 | 설명                        |
|------------------|--------------------|-----------------|------|-----------------------------|
| 사번             | employee_id        | VARCHAR(30)     | 자동 | 예: ADC_20250424_001        |
| 국문 성명        | name_kr            | VARCHAR(50)     | ✔    | 한글 이름                   |
| 영문 성명        | name_en            | VARCHAR(50)     | ✔    | 영문 이름                   |
| 생년월일         | birth_date         | DATE            | ✔    | yyyy-mm-dd                  |
| 성별             | gender             | ENUM('남','여') | ✔    |                             |
| 입사일           | hire_date          | DATE            | ✔    | yyyy-mm-dd                  |
| 이메일           | email              | VARCHAR(100)    | ✔고유| 로그인용 이메일             |
| 비밀번호         | password           | VARCHAR(255)    | ✔    | 암호화 저장 필요            |
| 부서 ID          | department_id      | INT             | ✔    | 외래키: Departments.id      |
| 직급 ID          | position_id        | INT             | ✔    | 외래키: Positions.id        |
| 유선전화         | phone_landline     | VARCHAR(20)     |      | 02-123-4567                 |
| 핸드폰           | phone_number       | VARCHAR(20)     | ✔    | 010-1234-5678               |
| 이력서 파일      | resume_file        | VARCHAR(255)    | ✔    | 저장된 파일 경로            |
| 자기소개서 파일  | cover_letter_file  | VARCHAR(255)    | ✔    | 저장된 파일 경로            |
| 계정 활성화 여부 | is_active          | BOOLEAN         | 기본 | TRUE: 활성/FALSE: 비활성    |
| 이메일 인증 여부 | email_verified     | BOOLEAN         | 기본 | FALSE: 이메일 인증 상태      |
| 등록일시         | created_at         | TIMESTAMP       | 자동 | 등록 시각 자동 기록         |

4. 개발 순서(권장 단계)
----------------------
1) **요구사항 분석 및 상세 설계**
   - 전체 기능 목록/흐름/권한/데이터 구조 확정
2) **DB 설계 및 마이그레이션**
   - 회원, 조직, 근태, 결재, 게시판, 자산, 시설 등 테이블 설계/생성
3) **백엔드(FastAPI) 기본 구축**
   - 인증/권한, 회원/조직/게시판/결재/자산/시설 등 API 구현
   - Swagger 문서화, 테스트 코드 작성
4) **프론트엔드(Next.js) 기본 구축**
   - 라우팅, 공통 레이아웃, 로그인/회원가입/메인/게시판 등 UI
   - API 연동, 상태관리, 반응형 UI, 접근성
5) **주요 업무 기능별 개발**
   - 근태, 결재, 자산, 시설, 일정, 통계 등 단계별 구현
6) **관리자/시스템 관리 기능 개발**
   - 관리자 대시보드, 로그, 백업/복구, 환경설정 등
7) **추가/확장 기능 및 외부 연동**
   - 모바일, SSO, 외부 시스템, 알림, 다국어 등
8) **테스트/배포/운영 자동화**
   - Docker, CI/CD, 모니터링, 백업, 장애 대응

5. 결론
------
- 위 상세 기능과 개발 순서를 기반으로, 단계별로 체계적이고 확장성 있게 인트라넷 시스템을 구축할 수 있습니다.
- 실제 도입 시, 조직의 요구사항에 따라 세부 기능/화면/권한을 조정할 수 있습니다.

*세부 설계, 화면 예시, API 명세, 개발 가이드가 필요하면 언제든 요청해 주세요!* 